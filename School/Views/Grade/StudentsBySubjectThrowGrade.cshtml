@model IEnumerable<School.Data.Entities.StudentsClassDetail>

@{
	ViewData["Title"] = "Students in subject";
}

<link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.css" />

<h3>Students in subject's class:</h3>
<flash dismissable="true" />
<br/>
<p>   
    <a asp-action="Index" class="btn btn-success">Back </a>
</p>

<table class="display" id="myTable" style="width:60%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Student.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
            </th>  
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.FullName)
                </td>
                <td id="student-grade-@item.Id">
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
                <td class="align-input-grade">
                    <input type="number" id="grade-input-@item.Id" class="form-control decimal-input small-input"  step="0,01"/>
                </td>                
                <td>                    
                    <button type="button" onclick="updateGrade(@item.Id)" class="btn btn-success">
                        <i class="fa-solid fa-floppy-disk"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{ await Html.RenderPartialAsync("_ValidationCurrencyPartial");   }
    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.js"></script>
    <script type="text/javascript">
        function updateGrade(itemId) {
            var newGradeInput = $("#grade-input-" + itemId).val();
            var newGrade = newGradeInput.replace(",", ".");
            
            if (newGrade < 0 || newGrade > 20) {
                alert("Por favor, digite uma nota entre 0 e 20.");
                return;
            }

            // Exibir um indicador de carregamento (opcional)
            $('#grade-input-' + itemId).prop('disabled', true); // Desabilita o input

            $.ajax({
                url: "/Grade/SaveGrade",
                type: "POST",
                data: { id: itemId, grade: newGrade },
                success: function (response) {
                    if (response.success) {                        
                        window.location.reload();
                    } else {
                        alert("Erro ao atualizar a nota: " + response.message);
                    }
                    // Reativar o input
                    $('#grade-input-' + itemId).prop('disabled', false);
                },
                error: function () {
                    alert("Ocorreu um erro ao atualizar a nota.");
                    // Reativar o input
                    $('#grade-input-' + itemId).prop('disabled', false);
                }
            });
        }

        $(document).ready(function () {
            $('#myTable').DataTable();
        });
    </script>
}