@model School.Models.AddSubjectViewModel

@{
    ViewData["Title"] = "Add Subject and Teacher";
}

<h2>Add Subject and Teacher in Class</h2>
<hr />
<br />
<flash dismissable="true" />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ClassSchoolId" />
            <input type="hidden" asp-for="@Model.Subjects" />
            <input type="hidden" asp-for="@Model.Teachers" />
            <div class="form-group">
                <label asp-for="SubjectId" class="control-label"></label>
                <select asp-for="SubjectId" asp-items="Model.Subjects" class="form-control"></select>
                <span asp-validation-for="SubjectId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TeacherId" class="control-label"></label>
                <select asp-for="TeacherId" asp-items="Model.Teachers" class="form-control"></select>
                <span asp-validation-for="TeacherId" class="text-danger"></span>
            </div>
            <br/>
            <div class="form-group">
                <input type="submit" value="Add to Class"  class="btn btn-warning" />
                <a asp-action="SubjectsInClass" asp-route-id="@Model.ClassSchoolId" class="btn btn-success"><i class="fa fa-chevron-left"></i> Back to Subjects's list</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}